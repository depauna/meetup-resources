apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/app-root: /
  name: book-store-ingress
  namespace: <userx>
spec:
  rules:
  - host: kubernetes-elb-test-1078957791.eu-west-1.elb.amazonaws.com
    http:
      paths:
      - backend:
          serviceName: book-store-service
          servicePort: 3000
        path: /<userx>

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: book-store
    component: "front-end"
  name: book-store-service
  namespace: <userx>
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: fe
  selector:
    app: book-store
    component: "front-end"
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: book-store
    component: "front-end"
  name: book-store-deployment
  namespace: <userx>
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  minReadySeconds: 5
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: book-store
        component: "front-end"
    spec:
      containers:
      - image: dockerusername/book-store:<userx>
        name: book-store
        # command: ["sh"]
        # args: ["-c", "npm config set mean-angular6:context 'user2'"]
        env:
        - name: MONGOHOST
          value: "mongo-service"
        - name: CONTEXTROOT
          value: "/<userx>/"
        ports:
        - containerPort: 3000
          name: fe
        imagePullPolicy: Always
      restartPolicy: Always